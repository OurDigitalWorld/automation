#!/bin/bash
### BEGIN INIT INFO
# Provides: frontend
# Required-Start: $all
# Required-Stop: $network $local_fs $syslog
# Default-Start: 2 3 4 5
# Default-Stop: 0 1 6
# Short-Description: Start frontend unicorn at boot
# Description: Enable frontend at boot time.
### END INIT INFO

set -u
set -e

. /lib/lsb/init-functions

USERNAME="dpla"
APP_NAME="api"
APP_ROOT="/srv/www/api"
START_SCRIPT="/usr/local/sbin/start_unicorn_api.sh"

# pid must match pidfile in unicorn.rb.j2
pid="$APP_ROOT/tmp/unicorn_${APP_NAME}.pid" 

usage() {
    echo >&2 "Usage: $0 <start|stop|restart|upgrade|rotate|force-stop|status|usage>"
}

sig () {
    test -s "$pid" && kill -$1 `cat $pid`
}

case $1 in
start)
    sig 0 && echo >&2 "Already running" && exit 0
    if [ "$(whoami)" != "$USERNAME" ]; then
        su - $USERNAME -c "$START_SCRIPT"
    else
        bash -lc "$START_SCRIPT"
    fi
    ;;
stop)
    sig QUIT && exit 0
    echo >&2 "Not running"
    ;;
force-stop)
    sig TERM && exit 0
    echo >&2 "Not running"
    ;;
restart|reload)
    sig HUP && echo reloaded OK && exit 0
    echo >&2 "Couldn't reload.  Starting instead"
    if [ "$(whoami)" != "$USERNAME" ]; then
        su - $USERNAME -c "$START_SCRIPT"
    else
        bash -lc "$START_SCRIPT"
    fi
    ;;
upgrade)
    sig USR2 && exit 0
    echo >&2 "Couldn't upgrade.  Starting instead"
    if [ "$(whoami)" != "$USERNAME" ]; then
        su - $USERNAME -c "$START_SCRIPT"
    else
        bash -lc "$cmd"
    fi
    ;;
rotate)
    sig USR1 && echo rotated logs OK && exit 0
    echo >&2 "Couldn't rotate logs" && exit 1
    ;;
status)
    status_of_proc -p $pid unicorn $APP_NAME && exit 0 || exit $?
    ;;
usage)
    usage
    exit 0
    ;;
*)
    usage
    exit 1
    ;;
esac
