---

- include_vars: "../vars/{{ level }}.yml"
  when: level is defined
  tags:
    - postgresql

- name: Set kernel shared memory to be enough for PostgreSQL
  template: >-
      src="30-postgresql-shm.conf.j2"
      dest=/etc/sysctl.d/30-postgresql-shm.conf
      owner=root group=root mode=0644
  tags:
    - postgresql

- name: Load Kernel settings modified above
  command: sysctl -p /etc/sysctl.d/30-postgresql-shm.conf
  tags:
    - postgresql

- name: Ensure that PostgreSQL and Ansible dependencies are installed
  apt: >
      pkg="{{ item }}" state=present
  environment:
    LANG: "{{ dpla_locale }}"
    LC_CTYPE: "{{ dpla_locale }}"
    LC_COLLATE: "{{ dpla_locale }}"
  with_items:
    - postgresql
    - libpq-dev
    - python-psycopg2
  tags:
    - postgresql
    - packages

- name: Ensure state of main PostgreSQL config file (postgresql.conf)
  template: src=postgresql.conf.j2 dest=/etc/postgresql/9.1/main/postgresql.conf
  notify:
    - restart postgresql
  tags:
    - postgresql

- name: Ensure state of PostgreSQL networking config file (pg_hba.conf)
  template: src=pg_hba.conf.j2 dest=/etc/postgresql/9.1/main/pg_hba.conf
  notify:
    - restart postgresql
  tags:
    - postgresql

- name: Make sure that PostgreSQL server environemnt variables are correct
  template: src=environment.j2 dest=/etc/postgresql/9.1/main/environment
  notify:
    - restart postgresql
  tags:
    - postgresql

- name: Ensure credentials of application PostgreSQL user
  postgresql_user: >
      name="{{ postgresql_user.name }}" password="{{ postgresql_user.password }}"
  sudo_user: postgres
  tags:
    - postgresql

- name: Make sure our databases exist
  postgresql_db: >-
      name={{ item }}
      encoding=UTF8
      lc_ctype={{ dpla_locale }}
      lc_collate={{ dpla_locale }}
      state=present
      template=template0
  sudo_user: postgres
  with_items:
    - dpla_portal
    - api
  tags:
    - postgresql

- name: Ensure privileges on dpla_portal database
  postgresql_privs: >
      database=dpla_portal
      roles={{ postgresql_user.name }}
      state=present
      type=database
      privs=ALL
  sudo_user: postgres
  tags:
    - postgresql

- name: Ensure privileges on api database
  postgresql_privs: >
      database=api
      roles={{ postgresql_user.name }}
      state=present
      type=database
      privs=ALL
  sudo_user: postgres
  tags:
    - postgresql

- name: Make sure that the backups directory exists
  file: path=/backups state=directory owner=root group=root mode=0755
  tags:
    - postgresql
    - backups
- name: Make sure that the PostgreSQL backups directory exists
  file: path=/backups/postgresql state=directory owner=postgres group=postgres mode=0770
  tags:
    - postgresql
    - backups

- name: Ensure state of crontab file
  template: >-
      src=etc_cron.d_backup-pg.j2 dest=/etc/cron.d/backup-pg
      owner=root group=root mode=0644
  tags:
    - postgresql
    - backups

