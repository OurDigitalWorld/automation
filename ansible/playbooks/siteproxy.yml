---

- name: Gather inventory facts in case playbook is run standalone
  hosts: all

- name: Site proxies
  hosts:
    - site_proxies
  sudo: yes
  serial: 1
  roles:
    - site_proxy
  pre_tasks:
    - name: Gather ec2 facts
      ec2_facts:
      when: level == 'production' or level == 'staging'
    - name: De-register instance from loadbalancer
      local_action: ec2_elb
      when: level == 'production' or level == 'staging'
      sudo: false
      args:
        instance_id: "{{ ansible_ec2_instance_id }}"
        ec2_elbs: "{{ siteproxy_elb_name }}"
        aws_access_key: "{{ aws_access_key }}"
        aws_secret_key: "{{ aws_secret_key }}"
        aws_region: "{{ aws_region }}"
        state: absent
  post_tasks:
    - name: Wait for site proxy node to come back up
      sudo: false
      local_action: >
          wait_for host="{{ inventory_hostname }}" port=80 delay=2 timeout=30
    - name: Register instance with loadbalancer again
      local_action: ec2_elb
      when: level == 'production' or level == 'staging'
      sudo: false
      args:
        instance_id: "{{ ansible_ec2_instance_id }}"
        ec2_elbs: "{{ siteproxy_elb_name }}"
        aws_access_key: "{{ aws_access_key }}"
        aws_secret_key: "{{ aws_secret_key }}"
        aws_region: "{{ aws_region }}"
        state: present
        wait_timeout: 22
  vars:
    # Default to production to keep development values from accidentally being
    # used in production.
    level: production
  vars_files:
    - ["../vars/{{ level }}.yml", "../vars/defaults.yml"]

